name: CI

on:
  # Build the nightly version at at 7:15 AM on Saturday UTC
  # schedule:
  #   - cron: "15 7 * * 6"

  push:
    branches:
      - develop

  pull_request:
    branches:
      - develop

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
        variant:
          - apache
          - cli
          - fpm
          - zts
          - cli-alpine
          - fpm-alpine
        include:
          - php: '7.3'
            variant: zts-alpine
          - php: '7.4'
            variant: zts-alpine
          # Support old versions of PHP
          - php: '7.0'
            variant: alpine
          - php: '7.1'
            variant: alpine
          - php: '7.2'
            variant: alpine
    env:
      DOCKER_IMAGE: oanhnn/php
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          echo "::set-output name=dir::$(echo ${{ matrix.php }}/${{ matrix.variant }})"
          echo "::set-output name=tag::$(echo ${{ env.DOCKER_IMAGE }}:${{ matrix.php }}-${{ matrix.variant }})"
          echo "::set-output name=created::$(date --utc --iso-8601=seconds | sed 's/+00.00/Z/g')"

      - name: Setting up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=registry,ref=${{ steps.prepare.outputs.tag }}
          cache-to: type=inline
          context: ${{ steps.prepare.outputs.dir }}
          pull: true
          load: true
          tags: ${{ steps.prepare.outputs.tag }}

      - name: Test
        run: |
          docker run ${{ steps.prepare.outputs.tag }} php -v
          docker run ${{ steps.prepare.outputs.tag }} php -m

      - name: Check vulnerabilities
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ steps.prepare.outputs.tag }}
          args: --file=${{ steps.prepare.outputs.dir }}/Dockerfile --exclude-base-image-vulns

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
