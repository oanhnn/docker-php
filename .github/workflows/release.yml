name: Release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and push to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
        variant:
          - apache
          - cli
          - fpm
          - zts
          - cli-alpine
          - fpm-alpine
        include:
          - php: '7.3'
            variant: zts-alpine
          - php: '7.4'
            variant: zts-alpine
          # Support old versions of PHP
          - php: '7.0'
            variant: alpine
          - php: '7.1'
            variant: alpine
          - php: '7.2'
            variant: alpine
    env:
      DOCKER_IMAGE: oanhnn/php
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: |
          echo "::set-output name=dir::$(echo ${{ matrix.php }}/${{ matrix.variant }})"
          echo "::set-output name=tag::$(echo ${{ env.DOCKER_IMAGE }}:${{ matrix.php }}-${{ matrix.variant }})"
          echo "::set-output name=version::$(echo ${{ matrix.php }})"
          echo "::set-output name=created::$(date --utc --iso-8601=seconds | sed 's/+00.00/Z/g')"

      - name: Setting up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Setting up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=registry,ref=${{ steps.prepare.outputs.tag }}
          cache-to: type=inline
          context: ${{ steps.prepare.outputs.dir }}
          labels: |
            org.opencontainers.image.title='The PHP Docker Image'
            org.opencontainers.image.authors=oanhnn
            org.opencontainers.image.created=${{ steps.prepare.outputs.created }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ steps.prepare.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.name }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
            linux/arm/v6
          pull: true
          push: true
          tags: ${{ steps.prepare.outputs.tag }}

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}
